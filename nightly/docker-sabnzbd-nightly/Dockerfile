## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046
FROM ghcr.io/dockserver/docker-alpine:latest
LABEL org.opencontainers.image.source="https://github.com/dockserver/container"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ARG VERSION="c43e74eabd17f0deff4eaa089c9cf71ff6888f13"
ARG BRANCH="develop"
ARG UNRAR_VERSION=6.1.4

ENV XDG_CONFIG_HOME="/config" \
PYTHONIOENCODING=utf-8

RUN \
  echo "**** install packages ****" && \
    apk add -U --update --no-cache --virtual=build-dependencies build-base gcc jq libffi-dev openssl-dev python3-dev && \
    apk add -U --update --no-cache jq ffmpeg curl p7zip par2cmdline python3 py3-pip && \
  echo "**** install unrar ****" && \
    mkdir -p /tmp/unrar && \
    curl -fsSL "https://www.rarlab.com/rar/unrarsrc-"${UNRAR_VERSION}".tar.gz" | tar xzf - -C /tmp/unrar --strip-components=1 && \
    cd /tmp/unrar && make && install -v -m755 unrar /usr/local/bin && \
  echo "**** install 'docker-sabnzbd-nightly' ****" && \
    mkdir -p /app/sabnzbd && \
    curl -fsSL "https://github.com/sabnzbd/sabnzbd/archive/"${VERSION}".tar.gz" | tar xzf - -C /app/sabnzbd --strip-components=1 && \
    python3 -m pip install --upgrade pip && \
    pip3 install -U --no-cache-dir --find-links https://wheel-index.linuxserver.io/alpine-3.15/ wheel apprise pynzb requests && \
    pip3 install -U --no-cache-dir --find-links https://wheel-index.linuxserver.io/alpine-3.15/ -r /app/sabnzbd/requirements.txt && \
  echo "**** cleanup ****" && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    apk del --purge build-dependencies && \
    rm -rf /var/cache/apk/* /tmp/* /config/.cache

COPY --chown=abc ./apps/docker-sabnzbd/root/ /

EXPOSE 8080 9090
VOLUME /config
##EOF
